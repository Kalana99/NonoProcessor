library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Sim_8_4_mux is
--  Port ( );
end Sim_8_4_mux;

architecture Behavioral of Sim_8_4_mux is

component Mux_8_way_4_bit is
    Port ( A0 : in STD_LOGIC_VECTOR (3 downto 0);
           A1 : in STD_LOGIC_VECTOR (3 downto 0);
           A2 : in STD_LOGIC_VECTOR (3 downto 0);
           A3 : in STD_LOGIC_VECTOR (3 downto 0);
           A4 : in STD_LOGIC_VECTOR (3 downto 0);
           A5 : in STD_LOGIC_VECTOR (3 downto 0);
           A6 : in STD_LOGIC_VECTOR (3 downto 0);
           A7 : in STD_LOGIC_VECTOR (3 downto 0);
           RegSel : in STD_LOGIC_VECTOR (2 downto 0);
           Q : out STD_LOGIC_VECTOR (3 downto 0));
end component;

signal A0, A1, A2, A3, A4, A5, A6, A7, Q: STD_LOGIC_VECTOR (3 downto 0);
signal RegSel : STD_LOGIC_VECTOR (2 downto 0);

begin

UUT: Mux_8_way_4_bit port map(
    A0 => A0,
    A1 => A1,
    A2 => A2,
    A3 => A3,
    A4 => A4,
    A5 => A5,
    A6 => A6,
    A7 => A7,
    RegSel => RegSel,
    Q => Q);
    
    process
        begin
            
            RegSel <= "000";
        
            A0 <= "0000";
            A1 <= "0001";
            A2 <= "0010";
            A3 <= "0011";
            A4 <= "0100";
            A5 <= "0101";
            A6 <= "0110";
            A7 <= "0111";
          
            wait for 100ns;
            
            RegSel <= "001";
            
            wait for 100ns;
            
            RegSel <= "010";
                        
            wait for 100ns;
            
            RegSel <= "011";
                        
            wait for 100ns;
            
            RegSel <= "100";
                        
            wait for 100ns;
            
            RegSel <= "101";
                        
            wait for 100ns;
            
            RegSel <= "110";
                        
            wait for 100ns;
            
            RegSel <= "111";
            
            wait;
           
        end process;
end Behavioral;